

#import "UIUserNotificationSettings+Extension.h"
#import "WebkitDemosAppDelegate+Notification.h"


#ifndef UIUserNotificationTypeAll
#define UIUserNotificationTypeAll (UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound)
#endif
#ifndef UIRemoteNotificationTypeAll
#define UIRemoteNotificationTypeAll (UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound)
#endif



@implementation WebkitDemosAppDelegate (Notification)


- (void)registerNotification:(UIApplication *)application
{
	//Ê≥®ÂÜåpushÊúçÂä°
#ifdef __IPHONE_8_0
	if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 8.0)
	{
		UIUserNotificationSettings *settings = [UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAll categories:nil];
		[[UIApplication sharedApplication] registerUserNotificationSettings:settings];
		
		[self setupNotificationSettings:application];
	}
	else
#endif
	{
		[[UIApplication sharedApplication] registerForRemoteNotificationTypes: UIRemoteNotificationTypeAll];
	}
}

- (void)setupNotificationSettings:(UIApplication *)application
{
	UIUserNotificationAction *openAction = [UIUserNotificationAction foregroundActionWithIdentifier:@"open_action" title:@"Open with alert üòâ"];
	UIUserNotificationAction *deleteAction = [UIUserNotificationAction backgroundDestructiveActionWithIdentifier:@"delete_action" title:@"Delete üò±" authenticationRequired:YES];
	UIUserNotificationAction *okAction = [UIUserNotificationAction backgroundActionWithIdentifier:@"ok_action" title:@"Ok üëç" authenticationRequired:NO];
	
	UIUserNotificationCategory *userNotificationCategory = [UIUserNotificationCategory categoryWithIdentifier:@"default_category" defaultActions:@[openAction, deleteAction, okAction] minimalActions:@[okAction, deleteAction]];
	
	UIUserNotificationSettings *userNotificationSettings = [UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAll categoriesArray:@[userNotificationCategory]];
	
	[application registerUserNotificationSettings:userNotificationSettings];
}


- (void)setupNotificationSettingsEx:(UIApplication *)application
{
	///< 1. ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÈÄöÁü•ÔºåÁÇπÂáªÂêéÊ∂àÂ§±Ôºå‰∏ç‰ºöÂÅö‰ªª‰Ωï‰∫ãÊÉÖ„ÄÇ
	///< 2. ÁÇπÂáªÈÄöÁü•Âä®‰ΩúÂêéÊ∑ªÂä†‰∏Ä‰∏™Áâ©ÂìÅ„ÄÇ
	///< 3. ÁÇπÂáªÈÄöÁü•Âä®‰ΩúÂêéÂà†Èô§Êï¥‰∏™Ê∏ÖÂçï„ÄÇ
	UIMutableUserNotificationAction *justInformAction = nil;
	UIMutableUserNotificationAction *modifyListAction = nil;
	UIMutableUserNotificationAction *trashAction = nil;
	
	UIMutableUserNotificationAction *instance = nil;
	
	///< Âä®‰ΩúÁöÑÊ†áÁ§∫Á¨¶ÊòØ‚ÄúÊèêÁ§∫ËÄåÂ∑≤ÔºàjustInformÔºâ‚Äù„ÄÇÂä®‰ΩúÂè™‰ºöÂú®backgrounËøêË°åÔºå‰∏ç‰ºö‰∫ßÁîü‰ªª‰ΩïÂÆâÂÖ®ÈóÆÈ¢òÔºåÊâÄ‰ª•Êàë‰ª¨ËÆæÁΩÆ‰∫ÜdestructiveÂíåauthenticationRequired‰∏∫false„ÄÇ
	instance = [UIMutableUserNotificationAction new];
	instance.identifier = @"justInform";
	instance.title = @"OK, got it";
	instance.activationMode = UIUserNotificationActivationModeBackground;
	instance.authenticationRequired = NO;
	instance.destructive = NO; ///< Êìç‰ΩúÊúâÁ†¥ÂùèÊÄß,ÂΩìËÆæÁΩÆ‰∏∫trueÊó∂ÔºåÈÄöÁü•‰∏≠Áõ∏Â∫îÂú∞ÊåâÈíÆÁöÑËÉåÊôØËâ≤‰ºöÂèòÊàêÁ∫¢Ëâ≤„ÄÇËøôÂè™‰ºöÂú®bannerÈÄöÁü•‰∏≠Âá∫Áé∞„ÄÇÈÄöÂ∏∏ÔºåÂΩìÂä®‰Ωú‰ª£Ë°®ÁùÄÂà†Èô§„ÄÅÁßªÈô§ÊàñËÄÖÂÖ∂‰ªñÂÖ≥ÈîÆÁöÑÂä®‰ΩúÊòØÈÉΩ‰ºöË¢´Ê†áËÆ∞‰∏∫destructive‰ª•Ëé∑ÂæóÁî®Êà∑ÁöÑÊ≥®ÊÑè„ÄÇ
	justInformAction = instance;
	
	///< ‰∏∫‰∫ÜËÆ©Áî®Êà∑ËÉΩÂ§üÊ†áËÆ∞Áâ©ÂìÅÊ∏ÖÂçïÔºåÊàë‰ª¨ÈúÄË¶ÅAppÂêØÂä®„ÄÇËÄå‰∏îÊàë‰ª¨‰∏çÂ∏åÊúõÁî®Êà∑ÁöÑÁâ©ÂìÅÊ∏ÖÂçïË¢´Êú™È™åÊòéË∫´‰ªΩÁöÑ‰∫∫‰π±Âä®ÔºåÊàë‰ª¨ËÆæÁΩÆ‰∫ÜauthenticationRequired‰∏∫true„ÄÇ
	instance = [UIMutableUserNotificationAction new];
	instance.identifier = @"editlist";
	instance.title = @"Edit list";
	instance.activationMode = UIUserNotificationActivationModeForeground;
	instance.authenticationRequired = YES;
	instance.destructive = NO;
	modifyListAction = instance;
	
	///< Êàë‰ª¨ÂÖÅËÆ∏Áî®Êà∑Âú®AppÊ≤°ÊúâÂêØÂä®ÁöÑÊÉÖÂÜµ‰∏ãÂà†Èô§Êï¥‰∏™Áâ©ÂìÅÊ∏ÖÂçï„ÄÇËøô‰∏™Âä®‰ΩúÂèØËÉΩÂØºËá¥Áî®Êà∑‰∏¢Â§±ÊâÄÊúâÊï∞ÊçÆÔºåÊâÄ‰ª•Êàë‰ª¨ËÆæÁΩÆ‰∫ÜdestructiveÂíåauthenticationRequired‰∏∫true„ÄÇ
	instance = [UIMutableUserNotificationAction new];
	instance.identifier = @"trashAction";
	instance.title = @"Delete list";
	instance.activationMode = UIUserNotificationActivationModeBackground;
	instance.authenticationRequired = YES;
	instance.destructive = YES;
	trashAction = instance;
}

#pragma mark - ==[1] Local Notification
- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification
{
	NSLog(@"[11 Receive]didReceiveLocalNotification: %@", notification);
	//[application clearNotifications];
	
	//Ê∏ÖÈô§ÈÄöÁü•‰∏≠ÂøÉÁöÑÊ∂àÊÅØÊó∂ÈÄöËøáËÆæÁΩÆËßíÊ†á‰∏∫0ÁöÑÊñπÊ≥ïÂÆûÁé∞ÁöÑÔºåËøôÈáåË°®Á§∫ÂæàÈöæÁêÜËß£ËãπÊûúÁöÑÂÅöÊ≥ï„ÄÇÂπ∂‰∏îÁõÆÂâçÊñπÊ°àÊòØÊé®ÈÄÅÁöÑÊ∂àÊÅØ‰∏çÂ∏¶ËßíÊ†áÁöÑ
	//Âç≥ËßíÊ†áÈªòËÆ§‰∏∫0Ôºå‰ΩÜÊ≠§Êó∂Â¶ÇÊûúÁõ¥Êé•ËÆæÁΩÆËßíÊ†á‰∏∫0ÔºåÊ∂àÊÅØÊó†Ê≥ïÊ∏ÖÈô§ÔºåÂøÖÈ°ªÂÖàËÆæÈùû0ÂÄºÔºåÂÜçËÆæ‰∏∫0ÊâçËÉΩÂÆûÁé∞ÔºåÊàëËÆ§‰∏∫ËøôÊòØ‰∏™Bug„ÄÇ
	[[UIApplication sharedApplication] setApplicationIconBadgeNumber:1];
	[[UIApplication sharedApplication] setApplicationIconBadgeNumber:0];
}

#pragma mark - User Notifications for iOS8
#ifdef __IPHONE_8_0
- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings
{
	NSLog(@"[11 Register]didRegisterUserNotificationSettings: %@", notificationSettings);
	[application registerForRemoteNotifications];
}
#endif

#pragma mark - Remote Notification

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo
{
	
	NSLog(@"[22 Receive]didReceiveRemoteNotification: %@", userInfo);
	
}

- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken
{
	
	NSLog(@"[22 Register]didRegisterForRemoteNotificationsWithDeviceToken: %@", deviceToken);
	
}

- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error
{
	
	NSLog(@"[44 did fail]didFailToRegisterForRemoteNotificationsWithError: %@", error);
}

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler
{
	
	
	NSLog(@"[33 Receive]didReceiveRemoteNotification: %@", userInfo);
}

#pragma mark - Background Fetch
- (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler
{
	
	
	NSLog(@"performFetchWithCompletionHandler: %@", completionHandler);
}

@end

